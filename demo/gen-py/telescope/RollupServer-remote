#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

import RollupServer
from ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print ''
  print 'Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] function [arg1 [arg2...]]'
  print ''
  print 'Functions:'
  print '  RollupMetrics GetRollupByPoints(string metricName, i64 ffrom, i64 to, i32 points)'
  print '  RollupMetrics GetRollupByResolution(string metricName, i64 ffrom, i64 to, Resolution resolution)'
  print '   GetMetricsForCheck(string acctId, string entityId, string checkId)'
  print ''
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = RollupServer.Client(protocol)
transport.open()

if cmd == 'GetRollupByPoints':
  if len(args) != 4:
    print 'GetRollupByPoints requires 4 args'
    sys.exit(1)
  pp.pprint(client.GetRollupByPoints(args[0],eval(args[1]),eval(args[2]),eval(args[3]),))

elif cmd == 'GetRollupByResolution':
  if len(args) != 4:
    print 'GetRollupByResolution requires 4 args'
    sys.exit(1)
  pp.pprint(client.GetRollupByResolution(args[0],eval(args[1]),eval(args[2]),eval(args[3]),))

elif cmd == 'GetMetricsForCheck':
  if len(args) != 3:
    print 'GetMetricsForCheck requires 3 args'
    sys.exit(1)
  pp.pprint(client.GetMetricsForCheck(args[0],args[1],args[2],))

else:
  print 'Unrecognized method %s' % cmd
  sys.exit(1)

transport.close()
