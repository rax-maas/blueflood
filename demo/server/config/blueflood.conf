NAME=localhost
# comma-delimited list of host:port tuples.
CASSANDRA_HOSTS=%listen_ip%:9160
DEFAULT_CASSANDRA_PORT=9160
ROLLUP_KEYSPACE=DATA
CLUSTER_NAME=TEST\u0020CLUSTER

# limits the maximum number of concurrent rollups that can be taking place. This number will vary, but should be
# kept reasonable. (values as high as 200 are not unreasonable, given suitable hardware.)
MAX_ROLLUP_READ_THREADS=100
MAX_ROLLUP_WRITE_THREADS=25
MAX_CASSANDRA_CONNECTIONS=128
MAX_TIMEOUT_WHEN_EXHAUSTED=1

# indicates how often the scheduler will scavenge for (shard,slots) that need to be rolled up.
SCHEDULE_POLL_PERIOD=5000

# if you find your system getting behind, but cores are not being fully utilized, follow this procedure:
# 1. if RollupServiceMBean.getQueuedRollupCount() is big, you need to increase MAX_ROLLUP_READ_THREADS and/or MAX_ROLLUP_WRITE_THREADS.

# identifies which data shards this node is responsible for. Value values are:
# 1. "ALL" indicates this node is responsible for rolling up all shards.
# 2. "NONE" indicates this node will not perform rollups. It is a read/write slave.
# 3. a comma-delimited list of integers (0-127). E.g.: "0,1,2,3,4,5,6,7"
SHARDS=All

# frequency at which shard state push/pull happens in milliseconds.
# pushes happen relatively quickly and should not be delayed.
SHARD_PUSH_PERIOD=2000

# since pulls take an order of magnitude longer than pushes, they should be spaced out.  The longer the period, the
# higher the probability that occasional extra 5m rollups will be scheduled.  Plan on at least 50ms per shard.  So if
# your node is managing 10 shards, it will take about 500ms to do a pull.
SHARD_PULL_PERIOD=10000

# each node can run one or more of INGEST, ROLLUP or QUERY services. This
# setting makes that obvious and explicit.
INGEST_MODE=true
ROLLUP_MODE=true
QUERY_MODE=true
INGESTION_MODULES=com.rackspacecloud.blueflood.service.HttpIngestionService
QUERY_MODULES=com.rackspacecloud.blueflood.service.HttpQueryService
