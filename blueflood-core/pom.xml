<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2013 Rackspace
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>blueflood</artifactId>
    <groupId>com.rackspacecloud</groupId>
    <version>1.0.4-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <name>blueflood-core</name>
  <artifactId>blueflood-core</artifactId>
  
  <properties>
    <cassandra.plugin.version>1.1.0-1</cassandra.plugin.version>
  </properties>

  <build>
    <plugins>

      <!-- test -->

      <!-- Used to add source directories to our build. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <!-- States that the plugin's add-test-source goal is executed at generate-test-sources phase. -->
          <execution>
            <id>add-integration-test-sources</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <!-- Configures the source directory of integration tests. -->
              <sources>
                <source>src/integration-test/java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Used for unit tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.14.1</version>
        <configuration>
          <!-- Skips unit tests if the value of skip.unit.tests property is true -->
          <skipTests>${skip.unit.tests}</skipTests>
          <!-- Excludes integration tests when unit tests are run. -->
          <excludes>
            <exclude>**/*Integration*.java</exclude>
          </excludes>
          <parallel>classes</parallel>
          <threadCount>5</threadCount>
        </configuration>
      </plugin>

      <!-- Used for integration tests -->
      <!-- Spin up Cassandra -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cassandra-maven-plugin</artifactId>
        <version>${cassandra.plugin.version}</version>
        <configuration>
          <listenAddress>${cassandra.listenAddress}</listenAddress>
          <rpcPort>${cassandra.rpcPort}</rpcPort>
          <!--There are issues when running tests inside vmware fusion on a filesystem mounted from the host machine-->
          <cassandraDir>/tmp/bf-cassandra-${cassandra.plugin.version}/</cassandraDir>
        </configuration>
        <executions>
          <execution>
            <id>delete-cassandra</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>delete</goal>
            </goals>
          </execution>
          <execution>
            <id>start-cassandra</id>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>load-schema</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>load</goal>
            </goals>
            <configuration>
              <script>${basedir}/src/test/resources/cassandra/cli/load.script</script>
            </configuration>
          </execution>
          <execution>
            <id>stop-cassandra</id>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.15</version>
        <executions>
          <!-- States that both integration-test and verify goals of the Failsafe Maven plugin are executed. -->
          <execution>
            <id>integration-tests</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
            <configuration>
              <testSourceDirectory>src/integration-test/java</testSourceDirectory>
              <!-- do not require zookeeper for these tests. -->
              <argLine>-DZOOKEEPER_CLUSTER=NONE</argLine>
              <argLine>-Dlog4j.configuration=file://${basedir}/src/test/resources/log4j-test.properties</argLine>
              <!-- Skips integration tests if the value of skip.integration.tests property is true -->
              <skipTests>${skip.integration.tests}</skipTests>
              <includes>
                <include>**/*Integration*.java</include>
              </includes>
              <excludes>
                <!-- requires an API service -->
                <exclude>**/InternalApiIntegrationTest.java</exclude>
                <!-- this one requires a live zookeeper -->
                <exclude>**/ZKBasedShardLockManagerIntegrationTest.java</exclude>
                <exclude>**/ScheduleContextIntegrationTest.java</exclude>
              </excludes>
            </configuration>
          </execution>
          <execution>
            <id>verify</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- bundle -->
      <!-- mvn assembly:assembly -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>2.5.2</version>
        <configuration>
          <check />
          <formats>
            <format>xml</format>
            <format>html</format>
          </formats>
        </configuration>
        <executions>
          <execution>
            <phase>verify</phase>
            <goals>
              <goal>cobertura</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>

  </build>

  <dependencies>

    <dependency>
      <groupId>com.netflix.astyanax</groupId>
      <artifactId>astyanax-core</artifactId>
      <version>1.56.34</version>
    </dependency>

    <dependency>
      <groupId>com.netflix.astyanax</groupId>
      <artifactId>astyanax-thrift</artifactId>
      <version>1.56.34</version>
    </dependency>

    <dependency>
      <groupId>com.netflix.astyanax</groupId>
      <artifactId>astyanax-cassandra</artifactId>
      <version>1.56.34</version>
    </dependency>

    <dependency>
      <groupId>com.netflix.astyanax</groupId>
      <artifactId>astyanax-recipes</artifactId>
      <version>1.56.34</version>
    </dependency>

    <dependency>
      <groupId>com.netflix.curator</groupId>
      <artifactId>curator-framework</artifactId>
      <version>1.3.2</version>
    </dependency>

    <dependency>
      <groupId>com.netflix.curator</groupId>
      <artifactId>curator-recipes</artifactId>
      <version>1.3.2</version>
    </dependency>

    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.2</version>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>12.0.1</version>
    </dependency>

    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.2.1</version>
    </dependency>

    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.16</version>
    </dependency>

    <dependency>
      <groupId>com.yammer.metrics</groupId>
      <artifactId>metrics-core</artifactId>
      <version>2.0.0</version>
    </dependency>

    <dependency>
      <groupId>com.yammer.metrics</groupId>
      <artifactId>metrics-graphite</artifactId>
      <version>2.0.0</version>
    </dependency>

    <!-- todo: get off alpha version! -->
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <version>2.4.0a</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.6.4</version>
    </dependency>

    <!-- testing dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.8.4</version>
    </dependency>

    <dependency>
      <groupId>bigml</groupId>
      <artifactId>histogram</artifactId>
      <version>3.2.1</version>
    </dependency>

  </dependencies>

  <profiles>
    <profile>
      <id>cassandra-1.1</id>
      <properties>
        <cassandra.plugin.version>1.1.0-1</cassandra.plugin.version>
      </properties>
    </profile>
    <profile>
      <id>cassandra-1.2</id>
      <properties>
        <cassandra.plugin.version>1.2.1-1</cassandra.plugin.version>
      </properties>
    </profile>
    <!-- We cannot override the script value from the command line, so the only way to run 'cassandra:run' is by
         specifying it in a profile. -->
    <profile>
      <id>cassandra-only</id>
      <properties>
        <skip.unit.tests>true</skip.unit.tests>
        <skip.integration.tests>true</skip.integration.tests>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>cassandra-maven-plugin</artifactId>
            <version>${cassandra.plugin.version}</version>
            <configuration>
              <listenAddress>${cassandra.listenAddress}</listenAddress>
              <rpcPort>${cassandra.rpcPort}</rpcPort>
              <!--There are issues when running tests inside vmware fusion on a filesystem mounted from the host machine-->
              <cassandraDir>/tmp/bf-cassandra-${cassandra.plugin.version}/</cassandraDir>
              <loadAfterFirstStart>true</loadAfterFirstStart>
              <script>${basedir}/src/test/resources/cassandra/cli/load.script</script>
            </configuration>
            <executions>
              <execution>
                <id>default-cli</id>
                <phase>test</phase>
                <goals>
                  <goal>delete</goal>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <repositories>
    <repository>
      <id>clojars.org</id>
      <url>http://clojars.org/repo</url>
    </repository>
  </repositories>

</project>
